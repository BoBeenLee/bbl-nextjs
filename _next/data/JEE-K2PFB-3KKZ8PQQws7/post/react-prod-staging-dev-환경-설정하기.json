{"pageProps":{"slug":"react-prod-staging-dev-환경-설정하기","frontmatter":{"title":"React prod, staging, dev 환경 설정하기","date":"2018-07-08","published":false,"tags":["React","React Native","Environment"]},"content":"<p>React prod, staging, dev 환경 설정하기</p>\n<p><a href=\"https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#adding-custom-environment-variables\">crn</a>, <a href=\"https://movie.naver.com/movie/bi/mi/basic.nhn?code=115622\">crna</a>에서 외부 환경 설정을 추가하는 방법에 대해 다룬다.\nprod, dev환경 별 환경변수를 받으러면\ncrn같은 경우 기본적으로 <a href=\"https://github.com/facebook/create-react-app/blob/master/packages/react-scripts/template/README.md#what-other-env-files-can-be-used\">.env.local, .env.development, .env.production, .env.test</a>을 제공해주는거 같고\ncrna는 각 환경에 따른 환경 설정을 하려면 <a href=\"https://github.com/luggit/react-native-config\">react native config</a>나 <a href=\"https://github.com/zetachang/react-native-dotenv\">react native dotenv</a>(.env만 사용가능함)를 이용할 수 있겠다.</p>\n<p>만일 staging 환경을 추가하고 싶다라는 고민에서 기본적으로 제공하는 문서로는 다루기가 힘든다라는 것을 알고 다른 방안을 찾아보게 되었다.</p>\n<ul>\n<li>React App</li>\n</ul>\n<p><a href=\"https://github.com/BoBeenLee/environment-config-example/blob/react/package.json\">package.json</a></p>\n<pre><code>...\n \"scripts\": {\n    \"start\": \"cp ./.env.dev ./.env &#x26;&#x26; react-scripts start\",\n    \"start:staging\": \"cp ./.env.staging ./.env &#x26;&#x26; react-scripts start\",\n    \"start:production\": \"cp ./.env.prod ./.env &#x26;&#x26; react-scripts start\",\n  }\n...\n</code></pre>\n<p>스크립트 단에서 실행방법을 나누고 cp로 .env에 복사 후 각 환경별로 환경변수를 받고 실행하는 방법이다. \n내가 발견한 것들 중에 가장 깔끔한? 방법인거 같고 코드에 영향도도 가장 적고 관리하는데 가장 좋은 방법이라 생각한다.</p>\n<ul>\n<li>React Native App</li>\n</ul>\n<p><a href=\"https://github.com/BoBeenLee/environment-config-example/blob/react-native/package.json\">package.json</a></p>\n<pre><code>...\n\"scripts\": {\n    \"start\": \"./scripts/pre-build.sh development &#x26;&#x26; react-native-scripts start\",\n    \"start:staging\": \"./scripts/pre-build.sh staging &#x26;&#x26; react-native-scripts start\",\n    \"start:production\": \"./scripts/pre-build.sh production &#x26;&#x26; react-native-scripts start\",\n  },\n...\n</code></pre>\n<p>react native는 쉘 스크립트를 이용한 관리 방법이다.\n<a href=\"https://github.com/BoBeenLee/environment-config-example/blob/react-native/scripts/pre-build.sh\">pre-build.sh</a>는 환경별로 REACT_NATIVE_ENV키 값을 생성하여 <a href=\"https://github.com/BoBeenLee/environment-config-example/blob/react-native/config.json\">config.json</a>에 덮어씌운다.\n그리고 <a href=\"https://github.com/BoBeenLee/environment-config-example/blob/react-native/environment.js\">environment.js</a>을 만들어 환경별 필요한 변수들을 세팅하여 전달한다.</p>\n<h3>dotenv나 config라이브러리를 사용하지 않았던 이유</h3>\n<ul>\n<li>react native config\n물론 getting started 보고 설정하면 원활히 동작할 수 있겠지만 관리 측면에서 react native config 호환도 유지해야한다는 점에 오히려 불편하다는 걸 알게되었다. 그런 이유로 사용하지 않았던거같다.</li>\n<li>dotenv\ncrn은 내부적으로 설정 되어있지만 한정적인 설정밖에 안되어 이용하기 불편했던거같다. (ex) .env.staging 설정) \nreact native dotenv는 <a href=\"https://github.com/zetachang/react-native-dotenv\">.env만 사용가능</a>하여 제외 대상이었다.\n물론 아래와 같은 식으로 환경변수를 .env에 전달 받는 방법도 있겠다.\n.env</li>\n</ul>\n<pre><code>REACT_ENV=$REACT_ENV\n</code></pre>\n<p>package.json</p>\n<pre><code>\"scripts\": {\n\t\"start\": \"REACT_ENV=staging &#x26;&#x26; react-scripts start\"\n}\n</code></pre>\n<p>다만 react native에는 OS 환경에 환경변수 설정 후 appcenter환경에서 빌드 시엔 정상적으로 인식을 못했던거같다. ( react-native-dotenv의 이슈인지 정확히 모르겠지만 )</p>\n<p>환경별 환경변수 설정은 다양한 방법이 존재하겠지만 아직까진 위와 같은 방법이 가장 심플한 경험을 받았다.\n각 환경별 환경변수 설정 Example을 공유한다.</p>\n<p>React</p>\n<ul>\n<li><a href=\"https://github.com/BoBeenLee/environment-config-example/tree/react\">https://github.com/BoBeenLee/environment-config-example/tree/react</a></li>\n</ul>\n<p>React Native</p>\n<ul>\n<li><a href=\"https://github.com/BoBeenLee/environment-config-example/tree/react-native\">https://github.com/BoBeenLee/environment-config-example/tree/react-native</a></li>\n</ul>\n<p>Node</p>\n<ul>\n<li><a href=\"https://github.com/BoBeenLee/environment-config-example/tree/node\">https://github.com/BoBeenLee/environment-config-example/tree/node</a></li>\n</ul>\n"},"__N_SSG":true}
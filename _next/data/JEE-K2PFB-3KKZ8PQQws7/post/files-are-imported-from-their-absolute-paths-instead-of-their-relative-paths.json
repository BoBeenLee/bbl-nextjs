{"pageProps":{"slug":"files-are-imported-from-their-absolute-paths-instead-of-their-relative-paths","frontmatter":{"path":"/post/files-are-imported-from-their-absolute-paths-instead-of-their-relative-paths","title":"React 상대경로 -> 절대경로 변경","date":"2018-04-04","published":true,"tags":["javascript"]},"content":"<h2>상대경로 설정 시 문제점</h2>\n<pre><code>import utils from \"../../../../utils/my-utils\";\n</code></pre>\n<p>와 같이 패키지 구조가 깊어질 경우 임포트하기 번거로워지게 된다.</p>\n<pre><code>import utils from 'utils/my-utils';\n</code></pre>\n<p>와 같이 간단하게 임포트할 수 없을까?</p>\n<h2>지정된 절대경로로 임포트하기</h2>\n<h4>상대경로를 지정된 절대경로로 바꾸는 방법은 세가지 정도 있는듯하다.</h4>\n<ul>\n<li>Babel</li>\n<li>Webpack, Fusebox, ... ( module bundlers )</li>\n<li>create-react-app, create-react-app-ts</li>\n</ul>\n<h3>Babel</h3>\n<ul>\n<li>React Native, React \n<ul>\n<li><a href=\"https://github.com/tleunen/babel-plugin-module-resolver\">babel플러그인</a>을 이용하여 설정을 하면 간단하게 해결할 수 있다. \n<pre><code>\"plugins\": [\n    \"transform-react-jsx-source\",\n    [\n      \"module-resolver\",\n      {\n        \"alias\": {\n          \"~/*\": \"./src\"\n        },\n        \"cwd\": \"babelrc\"\n      }\n    ]\n  ]\n</code></pre>\n위와같이 .babelrc 설정을 해주면 src폴더 기준 '~/utils/my-utils'가 가능하다.\nbabel을 이용하는 프로젝트라면 리액트가 아니더라도 사용가능하여 가장 간단한 해결방안인듯 싶다.</li>\n<li><a href=\"https://github.com/BoBeenLee/absolute-sample/tree/2-react-native-ts\">샘플소스</a></li>\n</ul>\n</li>\n</ul>\n<h3>Webpack, Fusebox</h3>\n<ul>\n<li>Webpack\n<ul>\n<li>webpack.config.js 설정</li>\n</ul>\n<pre><code> resolve: {\n   modules: [\n     path.join(__dirname, \"src\"),\n     \"node_modules\"\n   ]\n }\n</code></pre>\n<ul>\n<li><a href=\"https://github.com/BoBeenLee/absolute-sample/tree/4-webpack\">샘플소스</a></li>\n</ul>\n</li>\n<li>Fusebox\n<ul>\n<li>fuse.js에 homeDir 설정</li>\n</ul>\n<pre><code> FuseBox.init({\n   homeDir: \"src\",\n   ...\n</code></pre>\n처럼 homeDir만 지정해주면 homeDirectory기준 '~/utils/my-utils'가 가능하다.\n<ul>\n<li><a href=\"https://github.com/BoBeenLee/absolute-sample/tree/3-fusebox-ts\">샘플소스</a></li>\n</ul>\n</li>\n</ul>\n<h3>create-react-app, create-react-app-ts</h3>\n<ul>\n<li>.env파일에 NODE_PATH=src/ 설정만 하면 끝.</li>\n<li><a href=\"https://github.com/BoBeenLee/absolute-sample/tree/1-create-react-app\">샘플소스</a></li>\n</ul>\n<h2><a href=\"https://code.visualstudio.com/docs/languages/jsconfig\">VSCode path 설정</a>.</h2>\n<p>자바스크립트일 경우 jsconfig.json \n타입스크립트일 경우 tsconfig.json 설정을 따로 해줘야한다.</p>\n<pre><code>{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"*\": [\n        \"*\",\n        \"src/*\"\n      ]\n    }\n  }\n}\n</code></pre>\n<h3>Pitfall</h3>\n<ul>\n<li>스토리북 tsconfig 설정 <a href=\"https://github.com/dividab/tsconfig-paths-webpack-plugin\">https://github.com/dividab/tsconfig-paths-webpack-plugin</a></li>\n</ul>\n"},"__N_SSG":true}